{"ast":null,"code":"var _jsxFileName = \"/Users/tim/_Dapp_ex/DappEx2_Election/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Election from '../abis/Election.json';\nimport MyNavbar from './MyNavbar.js'; //import Main from './Main.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Election.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(Election.abi, networkData.address);\n      this.setState({\n        election\n      });\n      const candidatesCount = await this.state.election.methods.candidatesCount().call();\n      this.setState({\n        candidatesCount\n      });\n      const can3 = await this.state.election.methods.candidates().call(3);\n      console.log(can3);\n      this.setState({\n        loading: false\n      });\n    } else {\n      window.alert('Election contract not deployed to detected network.');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      candidatesCount: 0,\n      loading: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(MyNavbar, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"loader\",\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Candidates Count: \", this.state.candidatesCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tim/_Dapp_ex/DappEx2_Election/src/components/App.js"],"names":["React","Component","Web3","Election","MyNavbar","App","componentDidMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","election","Contract","abi","address","candidatesCount","state","methods","call","can3","candidates","console","log","loading","constructor","props","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\n\nimport Election from '../abis/Election.json'\n\nimport MyNavbar from './MyNavbar.js'\n//import Main from './Main.js'\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n    const networkData = Election.networks[networkId]\n    if(networkData) {\n        const election = new web3.eth.Contract(Election.abi, networkData.address)\n        this.setState({ election })\n          \n        const candidatesCount = await this.state.election.methods.candidatesCount().call()\n        this.setState({candidatesCount})\n        \n        const can3 = await this.state.election.methods.candidates().call(3)\n        console.log(can3)\n\n        this.setState({ loading: false })\n    } else {\n        window.alert('Election contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      candidatesCount: 0,\n      loading: true\n    }\n   \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n  \n      <MyNavbar account={this.state.account}/>\n  \n        <div id=\"main\">\n            { this.state.loading \n            ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n            : <div>\n               <h1>Candidates Count: {this.state.candidatesCount}</h1>\n            </div>\n            }\n        </div>\n\n        \n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}